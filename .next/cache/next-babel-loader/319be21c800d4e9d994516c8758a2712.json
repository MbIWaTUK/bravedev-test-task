{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"F:\\\\projects\\\\brave developer\\\\test\\\\test-task\\\\pages\\\\operator\\\\[slug].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation Pay($input: Values) {\\n    pay(input: $input)\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, FormControl, Button, Snackbar, Grid, Box, Link } from \"@material-ui/core\";\nimport MaskedInput from 'react-text-mask';\nimport { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport NumberFormat from 'react-number-format';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useRouter } from \"next/router\";\nimport { useMutation, gql } from \"@apollo/client\";\nvar PAY = gql(_templateObject());\nvar useStyles = makeStyles({});\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }));\n}\n\n_c = Alert;\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref) {\n      inputRef(_ref ? _ref.inputElement : null);\n    },\n    mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/] // placeholderChar={'\\u2000'}\n    ,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }));\n}\n\n_c2 = TextMaskCustom;\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction NumberFormatCustom(props) {\n  var inputRef = props.inputRef,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return __jsx(NumberFormat, _extends({}, other, {\n    getInputRef: inputRef,\n    onValueChange: function onValueChange(values) {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    isNumericString: true // suffix=\"₽\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }));\n}\n\n_c3 = NumberFormatCustom;\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default function OperatorPage(_ref2) {\n  _s();\n\n  var rout = _ref2.rout;\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _useState = useState(rout),\n      operator = _useState[0],\n      setOperator = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      phone = _useState2[0],\n      setPhone = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      total = _useState3[0],\n      setTotal = _useState3[1];\n\n  var _useState4 = useState(null),\n      msg = _useState4[0],\n      setMsg = _useState4[1];\n\n  var _useState5 = useState(false),\n      open = _useState5[0],\n      setOpen = _useState5[1];\n\n  var handleClick = function handleClick() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  var _useState6 = useState({}),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useMutation = useMutation(PAY),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      pay = _useMutation2[0];\n\n  var handleChangePhone = function handleChangePhone(e) {\n    setPhone(e.target.value);\n  };\n\n  var handleChangeTotal = function handleChangeTotal(e) {\n    setTotal(e.target.value);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var errors, err, _yield$pay, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              errors = {};\n\n              if (phone.length === 0) {\n                errors.phone = 'Введите номер телефона';\n              }\n\n              if (phone && !('(', /[1 - 9] /, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/.test(phone) && !phone.includes(\"_\"))) {\n                errors.phone = 'Телефон введен не верно';\n              }\n\n              if (total.length === 0) {\n                errors.total = 'Введите сумму от 1 до 1000';\n              }\n\n              if (total && (parseFloat(total) < 1 || parseFloat(total) > 1000)) {\n                errors.total = 'Сумма должна быть от 1 до 1000';\n              }\n\n              _context.next = 8;\n              return setError(errors);\n\n            case 8:\n              _context.next = 10;\n              return Object.keys(errors).length;\n\n            case 10:\n              err = _context.sent;\n\n              if (!(err === 0)) {\n                _context.next = 27;\n                break;\n              }\n\n              _context.next = 14;\n              return pay({\n                variables: {\n                  input: {\n                    phone: phone,\n                    operator: operator,\n                    total: total\n                  }\n                }\n              });\n\n            case 14:\n              _yield$pay = _context.sent;\n              data = _yield$pay.data;\n\n              if (!(data && data.pay === false)) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.next = 19;\n              return handleClick();\n\n            case 19:\n              setMsg(\"Ошибка в запросе\");\n              _context.next = 27;\n              break;\n\n            case 22:\n              if (!(data && data.pay === true)) {\n                _context.next = 27;\n                break;\n              }\n\n              _context.next = 25;\n              return handleClick();\n\n            case 25:\n              setMsg(\"Оплата полшла успешно\");\n              setTimeout(function () {\n                router.push(\"/\");\n              }, 1500);\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, msg && __jsx(Snackbar, {\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    severity: \"\".concat(msg === \"Ошибка в запросе\" ? \"error\" : \"success\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, msg)), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    id: \"standard-basic\",\n    label: \"\\u041E\\u043F\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440\",\n    disabled: true,\n    value: operator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    error: error && error.phone ? true : false,\n    label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    value: phone,\n    onChange: handleChangePhone,\n    name: \"phone\",\n    id: \"formatted-text-mask-input\",\n    InputProps: {\n      inputComponent: TextMaskCustom\n    },\n    helperText: error && error.phone ? error.phone : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    error: error && error.total ? true : false,\n    label: \"\\u0421\\u0443\\u043C\\u043C\\u0430\",\n    value: total,\n    onChange: handleChangeTotal,\n    name: \"total\",\n    id: \"formatted-numberformat-input\",\n    InputProps: {\n      inputComponent: NumberFormatCustom\n    },\n    helperText: error && error.total ? error.total : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"\\u041F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C \\u0441\\u0447\\u0435\\u0442\")), __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")))));\n}\n\n_s(OperatorPage, \"oLz+bwD8dLn4FxbEkjKT5Shtkzs=\", false, function () {\n  return [useStyles, useRouter, useMutation];\n});\n\n_c4 = OperatorPage;\n\nOperatorPage.getInitialProps = function (ctx) {\n  var router = ctx.query.slug;\n  return {\n    rout: router ? router : \"оператор\"\n  };\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"TextMaskCustom\");\n$RefreshReg$(_c3, \"NumberFormatCustom\");\n$RefreshReg$(_c4, \"OperatorPage\");","map":{"version":3,"sources":["F:/projects/brave developer/test/test-task/pages/operator/[slug].js"],"names":["makeStyles","TextField","FormControl","Button","Snackbar","Grid","Box","Link","MaskedInput","useState","PropTypes","NumberFormat","MuiAlert","useRouter","useMutation","gql","PAY","useStyles","Alert","props","TextMaskCustom","inputRef","other","ref","inputElement","propTypes","func","isRequired","NumberFormatCustom","onChange","values","target","value","name","string","OperatorPage","rout","classes","router","operator","setOperator","phone","setPhone","total","setTotal","msg","setMsg","open","setOpen","handleClick","handleClose","event","reason","error","setError","pay","handleChangePhone","e","handleChangeTotal","handleSubmit","preventDefault","errors","length","test","includes","parseFloat","Object","keys","err","variables","input","data","setTimeout","push","inputComponent","getInitialProps","ctx","query","slug"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\"\r\nimport { TextField, FormControl, Button, Snackbar, Grid, Box, Link } from \"@material-ui/core\"\r\nimport MaskedInput from 'react-text-mask'\r\nimport { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport NumberFormat from 'react-number-format'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport { useRouter } from \"next/router\"\r\nimport { useMutation, gql } from \"@apollo/client\"\r\n\r\nconst PAY = gql`\r\n  mutation Pay($input: Values) {\r\n    pay(input: $input)\r\n  }\r\n`\r\n\r\nconst useStyles = makeStyles({\r\n\r\n})\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction TextMaskCustom(props) {\r\n  const { inputRef, ...other } = props;\r\n\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={(ref) => {\r\n        inputRef(ref ? ref.inputElement : null);\r\n      }}\r\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/]}\r\n      // placeholderChar={'\\u2000'}\r\n      showMask\r\n    />\r\n  );\r\n}\r\n\r\nTextMaskCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n    // suffix=\"₽\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function OperatorPage({ rout }) {\r\n  const classes = useStyles()\r\n  const router = useRouter()\r\n  const [operator, setOperator] = useState(rout)\r\n  const [phone, setPhone] = useState(\"\")\r\n  const [total, setTotal] = useState(\"\")\r\n  const [msg, setMsg] = useState(null)\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const [error, setError] = useState({})\r\n  const [pay] = useMutation(PAY)\r\n\r\n  const handleChangePhone = (e) => {\r\n    setPhone(e.target.value)\r\n  }\r\n\r\n  const handleChangeTotal = (e) => {\r\n    setTotal(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const errors = {}\r\n\r\n    if (phone.length === 0) {\r\n      errors.phone = 'Введите номер телефона'\r\n    }\r\n\r\n    if (\r\n      phone && !('(', /[1 - 9] /, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/.test(phone) && !phone.includes(\"_\"))\r\n    ) {\r\n      errors.phone = 'Телефон введен не верно'\r\n    }\r\n\r\n    if (total.length === 0) {\r\n      errors.total = 'Введите сумму от 1 до 1000'\r\n    }\r\n\r\n    if (total &&\r\n      (parseFloat(total) < 1 || parseFloat(total) > 1000)\r\n    ) {\r\n      errors.total = 'Сумма должна быть от 1 до 1000'\r\n    }\r\n\r\n    await setError(errors)\r\n    const err = await Object.keys(errors).length\r\n\r\n    if (err === 0) {\r\n\r\n      const { data } = await pay({\r\n        variables: {\r\n          input: {\r\n            phone,\r\n            operator,\r\n            total\r\n          },\r\n        },\r\n      })\r\n\r\n\r\n      if (data && data.pay === false) {\r\n        await handleClick()\r\n        setMsg(\"Ошибка в запросе\")\r\n      } else if (data && data.pay === true) {\r\n        await handleClick()\r\n        setMsg(\"Оплата полшла успешно\")\r\n        setTimeout(() => {\r\n          router.push(\"/\")\r\n        }, 1500)\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Box mt={3}>\r\n\r\n      {msg && <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={`${msg === \"Ошибка в запросе\" ? \"error\" : \"success\"}`}>\r\n          {msg}\r\n        </Alert>\r\n      </Snackbar>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={3}\r\n\r\n        >\r\n          <Grid item xs>\r\n            <TextField id=\"standard-basic\" label=\"Оператор\" disabled={true} value={operator} />\r\n          </Grid>\r\n\r\n          <Grid item xs>\r\n            <FormControl error>\r\n\r\n              <TextField\r\n                error={error && error.phone ? true : false}\r\n                label=\"Номер телефона\"\r\n                value={phone}\r\n                onChange={handleChangePhone}\r\n                name=\"phone\"\r\n                id=\"formatted-text-mask-input\"\r\n                InputProps={{\r\n                  inputComponent: TextMaskCustom\r\n                }}\r\n                helperText={error && error.phone ? error.phone : false}\r\n\r\n              />\r\n\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs>\r\n            <FormControl error>\r\n              <TextField\r\n                error={error && error.total ? true : false}\r\n                label=\"Сумма\"\r\n                value={total}\r\n                onChange={handleChangeTotal}\r\n                name=\"total\"\r\n                id=\"formatted-numberformat-input\"\r\n                InputProps={{\r\n                  inputComponent: NumberFormatCustom,\r\n                }}\r\n                helperText={error && error.total ? error.total : \"\"}\r\n\r\n              />\r\n\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Пополнить счет</Button>\r\n          </Grid>\r\n\r\n          <Grid item xs>\r\n            <Link href=\"/\">Назад</Link>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </form>\r\n\r\n    </Box>\r\n  )\r\n}\r\n\r\nOperatorPage.getInitialProps = (ctx) => {\r\n  const router = ctx.query.slug\r\n\r\n  return {\r\n    rout: router ? router : \"оператор\",\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}